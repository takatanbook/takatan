/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.69
 * Generated at: 2016-07-16 11:25:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import jp.asojuku.testmanagement.dto.TestInfoDto;
import jp.asojuku.testmanagement.dto.TestSeachResultDto;
import java.util.List;

public final class test_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"ja\">\n");
      out.write("<head>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<link href=\"");
      out.print(request.getContextPath() );
      out.write("/view/css/style.css\" rel=\"stylesheet\" type=\"text/css\" />\n");
      out.write("<script src=\"");
      out.print(request.getContextPath() );
      out.write("/view/js/jquery-1.11.3.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("$(function(){\n");
      out.write("    $('a,a img,button').css({\n");
      out.write("        opacity: 1.0,\n");
      out.write("        filter: \"alpha(opacity=100)\"\n");
      out.write("        }).hover(function(){\n");
      out.write("            $(this).fadeTo(200,0.6);\n");
      out.write("        },function(){\n");
      out.write("            $(this).fadeTo(200,1.0);\n");
      out.write("    })\n");
      out.write("});\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<header>\n");
      out.write("<h1><a href=\"");
      out.print(request.getContextPath() );
      out.write("/admintop\">検定管理システム</a></h1>\n");
      out.write("</header>\n");
 
TestSeachResultDto testseachresultdto = (TestSeachResultDto)request.getAttribute("testseachresult");
List<TestInfoDto> result = testseachresultdto.getTestlist();
int count = testseachresultdto.getSearchNum();
String keyword = testseachresultdto.getKeyword();

      out.write("\n");
      out.write("\n");
      out.write("<div class=\"main\">\n");
      out.write("<div class=\"info\">\n");
      out.write("\t<form action=\"");
      out.print(request.getContextPath() );
      out.write("/seachtestinfo\" method=\"POST\">\n");
      out.write("\t\t<p>キーワード：<input type=\"text\" name=\"keyword\">\n");
      out.write("\t\t<button class=\"button1\" type=\"submit\">再検索</button></p>\n");
      out.write("\t</form>\n");
      out.write("\t<h2>検索結果：　\"");
      out.print( keyword );
      out.write("\"</h2>\n");
      out.write("\t<table class=\"list\">\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<th>実施日</th><th>主催</th><th>検定名</th><th>操作</th>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t");
if (count != 0){ 
      out.write("\n");
      out.write("\t\t\t");
for (TestInfoDto data:result){
      out.write("\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td>");
      out.print( data.getExaminationDate() );
      out.write("</td><td>");
      out.print( data.getSponsor() );
      out.write("</td><td>");
      out.print( data.getTestName() );
      out.write("</td>\n");
      out.write("\t\t\t<td>\n");
      out.write("\t\t\t\t<table class=\"button_method\">\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t<td class=\"button\">\n");
      out.write("\t\t\t\t<form action=\"\" method=\"POST\">\n");
      out.write("\t\t\t\t<button class=\"button_student\" type=\"submit\" name=\"date\" value=\"");
      out.print( data.getTestId() );
      out.write("\">更新</button>\n");
      out.write("\t\t\t\t</form>\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t\t<td class=\"button\">\n");
      out.write("\t\t\t\t<form action=\"");
      out.print(request.getContextPath() );
      out.write("/confirmationdeletetestinfo\" method=\"POST\">\n");
      out.write("\t\t\t\t<button class=\"button_student\" type=\"submit\" name=\"date\" value=\"");
      out.print( data.getTestId() );
      out.write("\">削除</button>\n");
      out.write("\t\t\t\t</form>\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t\t</table>\n");
      out.write("\t\t\t</td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t\n");
      out.write("\t");
} 
      out.write("\n");
      out.write("\t</table>\n");
      out.write("\t</div>\n");
      out.write("\t\n");
      out.write("\t<div class=\"side\">\n");
      out.write("\t<form action=\"");
      out.print(request.getContextPath() );
      out.write("/logout\"><button class=\"menu\" type=\"submit\">ログアウト</button></form>\n");
      out.write("\t<form action=\"");
      out.print(request.getContextPath() );
      out.write("/admintop\"><button class=\"menu\" type=\"submit\">メニュートップ</button></form>\n");
      out.write("\t\n");
      out.write("\t<p><hr></p>\n");
      out.write("\t\n");
      out.write("\t<form action=\"");
      out.print(request.getContextPath() );
      out.write("/admintestview\" method=\"POST\"><button class=\"menu\" type=\"submit\">検定情報トップ</button></form>\n");
      out.write("\t<form action=\"test_add.html\" method=\"POST\"><button class=\"menu\" type=\"submit\">検定の追加</button></form>\n");
      out.write("\t</div>\n");
      out.write("\t\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\t\n");
      out.write("\t\n");
 }else{
      out.write('\n');
} 
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
